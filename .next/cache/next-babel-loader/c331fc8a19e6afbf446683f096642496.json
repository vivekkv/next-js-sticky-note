{"ast":null,"code":"var _jsxFileName = \"C:\\\\Works\\\\Farmers Fresh\\\\sticky_note\\\\pages\\\\home\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Reducer from './reducer';\nexport default function Login() {\n  _s();\n\n  var _useReducer = useReducer(Reducer, {\n    loginedUser: null\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState(null),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/users', {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      dispatch({\n        type: 'SET_USERS',\n        payload: users\n      });\n    });\n  }, []);\n\n  var onLogin = function onLogin() {\n    if ((formData === null || formData === void 0 ? void 0 : formData.UserName) && formData.Password) {\n      dispatch({\n        type: 'SUBMIT_LOGIN',\n        payload: formData\n      });\n    }\n\n    alert(\"Login Failed\");\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, state.loginedUser ? __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, \"Log Off\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 60\n    }\n  }, __jsx(\"input\", {\n    onChange: function onChange(e) {\n      return setFormData({\n        UserName: e.target.value,\n        Password: formData === null || formData === void 0 ? void 0 : formData.Password\n      });\n    },\n    placeholder: \"user name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    onChange: function onChange(e) {\n      return setFormData({\n        Password: e.target.value,\n        UserName: formData === null || formData === void 0 ? void 0 : formData.UserName\n      });\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n}\n\n_s(Login, \"CUdDj9PAAecmjAZ7Zzq8aTtpdY4=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Works/Farmers Fresh/sticky_note/pages/home/index.tsx"],"names":["React","useReducer","useState","useEffect","Reducer","Login","loginedUser","state","dispatch","formData","setFormData","fetch","headers","then","response","json","users","type","payload","onLogin","UserName","Password","alert","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,oBAEFJ,UAAU,CAACG,OAAD,EAAU;AAAEE,IAAAA,WAAW,EAAE;AAAf,GAAV,CAFR;AAAA,MAErBC,KAFqB;AAAA,MAEdC,QAFc;;AAAA,kBAGIN,QAAQ,CAAe,IAAf,CAHZ;AAAA,MAGrBO,QAHqB;AAAA,MAGXC,WAHW;;AAK5BP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAChDC,MAAAA,OAAO,EAAE;AACL,uCAA+B;AAD1B;AADuC,KAA/C,CAAL,CAKKC,IALL,CAKU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALlB,EAMKF,IANL,CAMU,UAAAG,KAAK,EAAI;AACXR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAIH,KAXL;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAI,CAAAV,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEW,QAAV,KAAsBX,QAAQ,CAACY,QAAnC,EAA6C;AACzCb,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAET;AAFJ,OAAD,CAAR;AAIH;;AACDa,IAAAA,KAAK,CAAC,cAAD,CAAL;AACH,GARD;;AAUA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECf,KAAK,CAACD,WAAN,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB,GAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C;AAAO,IAAA,QAAQ,EAAE,kBAACiB,CAAD;AAAA,aAAOb,WAAW,CAAC;AAAEU,QAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4BJ,QAAAA,QAAQ,EAAEZ,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEY;AAAhD,OAAD,CAAlB;AAAA,KAAjB;AAAiG,IAAA,WAAW,EAAC,WAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2C,EAE3C;AAAO,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,aAAOb,WAAW,CAAC;AAAEW,QAAAA,QAAQ,EAAEE,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4BL,QAAAA,QAAQ,EAAEX,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEW;AAAhD,OAAD,CAAlB;AAAA,KAAjB;AAAiG,IAAA,WAAW,EAAC,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF2C,EAG3C;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAH2C,CAFhD,CAAP;AASH;;GAvCuBd,K;;KAAAA,K","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react';\r\nimport Reducer from './reducer';\r\nimport { IUser } from './type';\r\n\r\nexport default function Login() {\r\n\r\n    const [state, dispatch] = useReducer(Reducer, { loginedUser: null });\r\n    const [formData, setFormData] = useState<IUser | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users', {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                dispatch({\r\n                    type: 'SET_USERS',\r\n                    payload: users\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    const onLogin = () => {\r\n        if (formData?.UserName && formData.Password) {\r\n            dispatch({\r\n                type: 'SUBMIT_LOGIN',\r\n                payload: formData\r\n            })\r\n        }\r\n        alert(\"Login Failed\")\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            state.loginedUser ? <button>Log Off</button> : <div>\r\n                <input onChange={(e) => setFormData({ UserName: e.target.value, Password: formData?.Password })} placeholder=\"user name\" />\r\n                <input onChange={(e) => setFormData({ Password: e.target.value, UserName: formData?.UserName })} placeholder=\"password\" />\r\n                <button onClick={onLogin}>Login</button>\r\n            </div>\r\n        }\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}