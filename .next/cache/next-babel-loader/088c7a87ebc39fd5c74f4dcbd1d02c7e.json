{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return {\n        posts: state.posts\n      };\n\n    case 'ON_LOG_OFF':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginSuccess: action.type == 'ON_LOGIN_SUCCESS'\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/Works/Farmers Fresh/sticky_note/pages/dashboard/reducer.tsx"],"names":["reducer","state","action","type","posts","loginSuccess"],"mappings":";;;;;;AAEA,SAASA,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAA2D;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHC,QAAAA,KAAK,EAAEH,KAAK,CAACG;AADV,OAAP;;AAIA,SAAK,YAAL;AACA,6CACOH,KADP;AAEII,QAAAA,YAAY,EAAEH,MAAM,CAACC,IAAP,IAAe;AAFjC;;AAIJ;AACI,aAAOF,KAAP;AAZR;AAcH;;AAED,eAAeD,OAAf","sourcesContent":["import ActionTypes, { State } from './type';\r\n\r\nfunction reducer(state: State, action: ActionTypes): State {\r\n    switch (action.type) {\r\n        case 'SET_POSTS':\r\n            return {\r\n                posts: state.posts\r\n            }\r\n\r\n            case 'ON_LOG_OFF':\r\n            return {\r\n                ...state,\r\n                loginSuccess: action.type == 'ON_LOGIN_SUCCESS',\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}