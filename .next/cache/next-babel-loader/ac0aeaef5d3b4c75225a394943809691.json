{"ast":null,"code":"var _jsxFileName = \"C:\\\\Works\\\\Farmers Fresh\\\\sticky_note\\\\pages\\\\dashboard\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Reducer from './reducer';\nimport Router from 'next/router';\nexport default function Login() {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(Reducer, {\n    posts: []\n  });\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(null);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\"\n      }\n    }).then(response => response.json()).then(users => {\n      dispatch({\n        type: 'SET_USERS',\n        users: users\n      });\n    });\n  }, []);\n\n  const onLogin = () => {\n    if (formData && formData.username && formData.Password) {\n      let userExists = state.users.find(p => p.username == formData.username);\n\n      if (userExists && formData.Password == \"123\") {\n        Router.push(\"/dashboard\");\n      } else {\n        dispatch({\n          type: 'ON_LOGIN_FAILED'\n        });\n      }\n\n      return;\n    }\n\n    alert(\"Please enter all fields\");\n  };\n\n  const onLogOff = () => dispatch({\n    type: 'ON_LOG_OFF'\n  });\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, state.loginSuccess ? __jsx(\"button\", {\n    onClick: onLogOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }\n  }, \"Log Off\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 80\n    }\n  }, __jsx(\"input\", {\n    onChange: e => setFormData({\n      username: e.target.value,\n      Password: formData === null || formData === void 0 ? void 0 : formData.Password\n    }),\n    placeholder: \"user name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    onChange: e => setFormData({\n      Password: e.target.value,\n      username: formData === null || formData === void 0 ? void 0 : formData.username\n    }),\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Login\"), state.message && __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 38\n    }\n  }, state.message)));\n}","map":{"version":3,"sources":["C:/Works/Farmers Fresh/sticky_note/pages/dashboard/index.tsx"],"names":["React","useReducer","useState","useEffect","Reducer","Router","Login","state","dispatch","posts","formData","setFormData","fetch","headers","then","response","json","users","type","onLogin","username","Password","userExists","find","p","push","alert","onLogOff","loginSuccess","e","target","value","message"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react';\r\nimport Reducer from './reducer';\r\nimport { IUser } from './type';\r\nimport Router from 'next/router'\r\n\r\nexport default function Login() {\r\n\r\n    const [state, dispatch] = useReducer(Reducer, { posts: [] })\r\n    const [formData, setFormData] = useState<IUser | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"*\",\r\n            }\r\n        }).then(response => response.json())\r\n            .then(users => {\r\n                dispatch({\r\n                    type: 'SET_USERS',\r\n                    users: users\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    const onLogin = () => {\r\n\r\n        if (formData && formData.username && formData.Password) {\r\n\r\n            let userExists = state.users.find((p: IUser) => p.username == formData.username);\r\n\r\n            if (userExists && formData.Password == \"123\") {\r\n\r\n                Router.push(\"/dashboard\")\r\n\r\n            } else {\r\n\r\n                dispatch({\r\n                    type: 'ON_LOGIN_FAILED',\r\n                })\r\n\r\n            }\r\n\r\n            return;\r\n        }\r\n        alert(\"Please enter all fields\")\r\n    }\r\n\r\n    const onLogOff = () => dispatch({ type: 'ON_LOG_OFF' }) \r\n\r\n    return <div>\r\n        {\r\n            state.loginSuccess ? <button onClick={onLogOff}>Log Off</button> : <div>\r\n                <input onChange={(e) => setFormData({ username: e.target.value, Password: formData?.Password })} placeholder=\"user name\" />\r\n                <input onChange={(e) => setFormData({ Password: e.target.value, username: formData?.username })} placeholder=\"password\" />\r\n                <button onClick={onLogin}>Login</button>\r\n                {\r\n                    state.message && <label>{state.message}</label>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}