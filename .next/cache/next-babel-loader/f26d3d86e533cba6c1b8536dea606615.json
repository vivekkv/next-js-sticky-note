{"ast":null,"code":"var _jsxFileName = \"C:\\\\Works\\\\Farmers Fresh\\\\sticky_note\\\\pages\\\\home\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useState } from 'react';\nimport Reducer from './reducer';\nexport default function Login() {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(Reducer, {\n    loginedUser: null\n  });\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(null);\n\n  const onLogin = () => {\n    if ((formData === null || formData === void 0 ? void 0 : formData.UserName) && formData.Password) {\n      dispatch({\n        type: 'SUBMIT_LOGIN',\n        payload: formData\n      });\n    }\n\n    alert(\"Login Failed\");\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, state.loginedUser ? __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }, \"Log Off\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 60\n    }\n  }, __jsx(\"input\", {\n    onChange: e => setFormData({\n      UserName: e.target.value,\n      Password: formData === null || formData === void 0 ? void 0 : formData.Password\n    }),\n    placeholder: \"user name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    onChange: e => setFormData({\n      Password: e.target.value,\n      UserName: formData === null || formData === void 0 ? void 0 : formData.UserName\n    }),\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["C:/Works/Farmers Fresh/sticky_note/pages/home/index.tsx"],"names":["React","useReducer","useState","Reducer","Login","state","dispatch","loginedUser","formData","setFormData","onLogin","UserName","Password","type","payload","alert","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAE5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,WAAW,EAAE;AAAf,GAAV,CAApC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAe,IAAf,CAAxC;;AAEA,QAAMQ,OAAO,GAAG,MAAM;AAClB,QAAI,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,QAAV,KAAsBH,QAAQ,CAACI,QAAnC,EAA6C;AACzCN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAEN;AAFJ,OAAD,CAAR;AAIH;;AACDO,IAAAA,KAAK,CAAC,cAAD,CAAL;AACH,GARD;;AAUA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECV,KAAK,CAACE,WAAN,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB,GAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C;AAAO,IAAA,QAAQ,EAAGS,CAAD,IAAOP,WAAW,CAAC;AAAEE,MAAAA,QAAQ,EAAEK,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4BN,MAAAA,QAAQ,EAAEJ,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEI;AAAhD,KAAD,CAAnC;AAAiG,IAAA,WAAW,EAAC,WAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2C,EAE3C;AAAO,IAAA,QAAQ,EAAGI,CAAD,IAAOP,WAAW,CAAC;AAAEG,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4BP,MAAAA,QAAQ,EAAEH,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG;AAAhD,KAAD,CAAnC;AAAiG,IAAA,WAAW,EAAC,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF2C,EAG3C;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAH2C,CAFhD,CAAP;AASH","sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport Reducer from './reducer';\r\nimport { IUser } from './type';\r\n\r\nexport default function Login() {\r\n\r\n    const [state, dispatch] = useReducer(Reducer, { loginedUser: null });\r\n    const [formData, setFormData] = useState<IUser | null>(null);\r\n\r\n    const onLogin = () => {\r\n        if (formData?.UserName && formData.Password) {\r\n            dispatch({\r\n                type: 'SUBMIT_LOGIN',\r\n                payload: formData\r\n            })\r\n        }\r\n        alert(\"Login Failed\")\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            state.loginedUser ? <button>Log Off</button> : <div>\r\n                <input onChange={(e) => setFormData({ UserName: e.target.value, Password: formData?.Password })} placeholder=\"user name\" />\r\n                <input onChange={(e) => setFormData({ Password: e.target.value, UserName: formData?.UserName })} placeholder=\"password\" />\r\n                <button onClick={onLogin}>Login</button>\r\n            </div>\r\n        }\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}